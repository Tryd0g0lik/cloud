# https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions
# https://github.com/Tryd0g0lik/cloud
name: Django CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build: # любое название
    runs-on: ubuntu-20.04 # ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
      REACT_APP_SECRET_KEY: ${{ secrets.REACT_APP_SECRET_KEY }}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      APP_SERVER_PORT: ${{ secrets.APP_SERVER_PORT }}
      APP_PORT: ${{ secrets.APP_PORT }}
      APP_PROTOKOL: "http"
      APP_SERVER_HOST: ${{ secrets.APP_SERVER_HOST }}
      EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
      EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
      REACT_APP_SERVER_URL: ${{ secrets.REACT_APP_SERVER_URL }}
      REACT_APP_SERVER_PORT: ${{ secrets.REACT_APP_SERVER_PORT }}
      DEPLOY_HOST: ${{ secret.DEPLOY_HOST }}
      DEPLOY_USER: ${{ secret.DEPLOY_USER }}
      DEPLOY_KEY: ${{ secret.DEPLOY_KEY }}
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready # command to check health
          --health-interval 10 # 10 seconds avery
          --health-timeout 5 # 5 second
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.10]

    steps:
    - name: Checkout repository to the changes
      uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: CodeThreat Scanner
      uses: CodeThreat/codethreat-github-action@v1.025
    - name: Check by PEP8 of standard
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --max-complexity=10 --max-line-length=127 --statistics
    - name: Deploy on Server
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ env.DEPLOY_HOST }}
        username: ${{ env.DEPLOY_USER }}
        key: ${{ env.DEPLOY_KEY }}


#    - name: Run tests
#      env:
#        SECRET_KEY: ${{ env.SECRET_KEY }}
#        EMAIL_HOST_PASSWORD: ${{ env.EMAIL_HOST_PASSWORD }}
#        REACT_APP_SECRET_KEY: ${{ env.REACT_APP_SECRET_KEY }}
#        POSTGRES_HOST: ${{ env.POSTGRES_HOST }}
#        POSTGRES_PORT: ${{ env.POSTGRES_PORT }}
#        POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
#        POSTGRES_USER: ${{ env.POSTGRES_USER }}
#        POSTGRES_DB: ${{ env.POSTGRES_DB }}
#        APP_SERVER_PORT: ${{ env.APP_SERVER_PORT }}
#        APP_PORT: ${{ env.APP_PORT }}
#        APP_PROTOKOL: "http"
#        APP_SERVER_HOST: ${{ env.APP_SERVER_HOST }}
#        EMAIL_PORT: ${{ env.EMAIL_PORT }}
#        EMAIL_HOST_USER: ${{ env.EMAIL_HOST_USER }}
#        REACT_APP_SERVER_URL: ${{ env.REACT_APP_SERVER_URL }}
#        REACT_APP_SERVER_PORT: ${{ env.REACT_APP_SERVER_PORT }}
#      run: |
#        python manage.py test
#        echo "Hello world"
#        python manage.py migrate
#        python manage.py runserver 0.0.0.0:8000
#        curl http://localhost:8000
#        echo "Hello world 2"
