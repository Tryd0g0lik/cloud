# https://docs.swagger.io/spec.html#511-object-example
# https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#document-structure
# https://www.speakeasy.com/openapi/
openapi: '3.0.3'
info:
  version: '1.0.0'
  title: Cloud service - OpenAPI 3.0
  description: |-
    This is application for a cloud service. This service is a file storage \
    in clode.
    1. User registration.\
    2. Save nad then uses user's files.
  contact:
    name: Denis
    email: work80@mail.ru
    url: https://github.com/Tryd0g0lik
servers:
  - url: http://localhost:8080/api/v1
    description: "Basis server"
paths:
  /users/patch/{pk}/:
    get:
      tags:
        - user
      summary: Read a user data
      description: |-
        For update data of single cell or more cells.
      operationId: UserPatchViews
      parameters:
        - name: pk
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UserId'
          example: 12
        - name: user_session
          in: cookie
          required: true
          schema:
            type: string
            example: "gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu"
        - name: is_superuser
          in: cookie
          required: true
          schema:
            type: boolean
            example: false
        - name: index
          in: cookie
          required: true
          schema:
            type: integer
            example: 112
            description: This is the user ID.

      responses:
        200:
          description: Get the json's array of objects from db
          headers:
            Set-Cookie:
                schema:
                    description: Cookie, can containing session information.
                    type: string
                    example: |-
                        "index=123; Path=/; SameSite"
                        "is_active=False; Path=/; SameSite"
                        "is_superuser=False; Path=/; SameSite"
                        "user_session="\034\340\223W\244t'\323xw\325\326\030\2733#E\323t^G)\351]>:m\375\301\202\377O\233\331\342{g2\350\006\026\017\360QV\365o\323\300:\2415\361\267\352\233\211\"\2023S\342*\256"; Path=/; HttpOnly; SameSite"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProperties'
        404:
          description: Not found for the provided `pk`
          content:
            application/json:
              schema:
                properties:
                    detail:
                        $ref: '#/components/schemas/ErrorUsedId'
              example:
                detail: No UserRegister matches the given query.
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUsedId'
    patch:
      tags:
        - user
      summary: Update of data from user db
      description: |-
        Update the single cell or more cells from user's data of db.
        hen changing one the your cell, other cells will have not can change.
        
        /* ----- Prymaty login ----- */ \
        This an API, is changes the user's 'is_active' == True (profile is online) of False (profile is ofline). \
        For, a primary logging of user in web-site , an API, do not requre the variables 'user_session' and 'is_superuser' for the authorisation.\

        The variables 'user_session' and 'is_superuser', the user will  recieves fromthe api's respose.


      operationId: UserPatchViews
      parameters:
        - name: pk
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UserId'
          example: 12
        - name: user_session
          in: cookie
          required: true
          schema:
            type: string
            example: "gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu"
        - name: is_superuser
          in: cookie
          required: false
          schema:
            type: boolean
            example: false
        - name: index
          in: cookie
          required: false
          schema:
            type: integer
            example: 112
            description: This is the user ID.
      security:
        - CookieAuth: []
          value: ["gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu"]
      requestBody:
        required: true
        content:
            application/json:
              schema:
                type: object
                oneOf:
                    - properties:
                        is_active:
                            type: boolean
                            description: User into online (itis True) or ofline (False). Change the user status online.
                            example: false
                    - properties:
                        first_name:
                            type: string
                            description: Change the user name.
                            example: Serge
                        last_name:
                            type: string
                            description: Change the last name.
                            example: Gerasimov

      responses:
        200:
          description: Get the json of object from db
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProperties/oneOf/0'
              example:
               last_login:
                $ref: '#/components/schemas/UserProperties/oneOf/0/properties/last_login/oneOf/0/example'
               is_superuser:
                $ref: '#/components/schemas/UserProperties/oneOf/0/properties/is_superuser/example'
               username:
                $ref: '#/components/schemas/UserProperties/oneOf/0/properties/username/example'
               first_name:
                $ref: '#/components/schemas/UserProperties/oneOf/0/properties/first_name/example'
               last_name:
                $ref: '#/components/schemas/UserProperties/oneOf/0/properties/last_name/example'
               is_staff:
                $ref: '#/components/schemas/UserProperties/oneOf/0/properties/is_staff/example'
               is_active:
                $ref: '#/components/schemas/UserProperties/oneOf/0/properties/is_active/example'
               date_joined:
                $ref: '#/components/schemas/UserProperties/oneOf/0/properties/date_joined/example'
        404:
          description: Not found for the provided `pk`
          content:
            application/json:
              schema:
                properties:
                  detail:
                    $ref: '#/components/schemas/ErrorUsedId'
              example:
                detail: No UserRegister matches the given query.
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUsedId'
  /users/choice/{pk}/:
    get:
      tags:
        - user
      summary: Read a user data
      description: |-
        For update data of single cell or more cells.
      operationId: UserView
      parameters:
        - name: pk
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UserId'
          example: 12
        - name: user_session
          in: cookie
          required: true
          schema:
            type: string
            example: "gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu"
        - name: is_superuser
          in: cookie
          required: false
          schema:
            type: boolean
            example: false
        - name: index
          in: cookie
          required: false
          schema:
            type: integer
            example: 112
            description: This is the user ID.
      responses:
        200:
          description: Get the json of object from db
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProperties'
              example:
               last_login:
                $ref: '#/components/schemas/UserProperties/oneOf/0/properties/last_login/oneOf/0/example'
               is_superuser:
                $ref: '#/components/schemas/UserProperties/oneOf/0/properties/is_superuser/example'
               username:
                $ref: '#/components/schemas/UserProperties/oneOf/0/properties/username/example'
               first_name:
                $ref: '#/components/schemas/UserProperties/oneOf/0/properties/first_name/example'
               last_name:
                $ref: '#/components/schemas/UserProperties/oneOf/0/properties/last_name/example'
               is_staff:
                $ref: '#/components/schemas/UserProperties/oneOf/0/properties/is_staff/example'
               is_active:
                $ref: '#/components/schemas/UserProperties/oneOf/0/properties/is_active/example'
               date_joined:
                $ref: '#/components/schemas/UserProperties/oneOf/0/properties/date_joined/example'
        404:
          description: Not found for the provided `pk`
          content:
            application/json:
              schema:
                properties:
                    detail:
                        $ref: '#/components/schemas/ErrorUsedId'
              example:
                detail: No UserRegister matches the given query.
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUsedId'
    put:
      tags:
        - user
      summary: Update of data from user db
      description: |-
        Update everyone of cells from user's data of db.
        If youy chang only one cell, other cells will have value the null. 

      operationId: UserView
      parameters:
        - name: pk
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UserId'
          example: 12
        - name: user_session
          in: cookie
          required: true
          schema:
            type: string
            example: "gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu"
        - name: is_superuser
          in: cookie
          required: false
          schema:
            type: boolean
            example: false
        - name: index
          in: cookie
          required: false
          schema:
            type: integer
            example: 112
            description: This is the user ID.
      requestBody:
        required: true
        content:
            application/json:
                schema:
                    $ref: '#/components/schemas/UserProperties/oneOf/1'

      responses:
        200:
          description: Get the json of object from db
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProperties/oneOf/0'
              example:
               last_login:
                $ref: '#/components/schemas/UserProperties/oneOf/0/properties/last_login/oneOf/0/example'
               is_superuser:
                $ref: '#/components/schemas/UserProperties/oneOf/0/properties/is_superuser/example'
               username:
                $ref: '#/components/schemas/UserProperties/oneOf/0/properties/username/example'
               first_name:
                $ref: '#/components/schemas/UserProperties/oneOf/0/properties/first_name/example'
               last_name:
                $ref: '#/components/schemas/UserProperties/oneOf/0/properties/last_name/example'
               is_staff:
                $ref: '#/components/schemas/UserProperties/oneOf/0/properties/is_staff/example'
               is_active:
                $ref: '#/components/schemas/UserProperties/oneOf/0/properties/is_active/example'
               date_joined:
                $ref: '#/components/schemas/UserProperties/oneOf/0/properties/date_joined/example'
        404:
          description: Not found for the provided `pk`
          content:
            application/json:
              schema:
                properties:
                  detail:
                    $ref: '#/components/schemas/ErrorUsedId'
              example:
                detail: No UserRegister matches the given query.
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUsedId'
    delete:
      tags:
        - user
      summary: Delete a single position from db
      description: |-
        Delete a single position from db by the 'pk'  atribut of url.
        'pk' itis identifier of the position for remove.
      operationId: UserView
      parameters:
        - name: pk
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UserId'
          example: 12
        - name: user_session
          in: cookie
          required: true
          schema:
            type: string
            example: "gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu"
        - name: is_superuser
          in: cookie
          required: false
          schema:
            type: boolean
            example: false
        - name: index
          in: cookie
          required: false
          schema:
            type: integer
            example: 112
            description: This is the user ID.
      responses:
        204:
          description: It is successful operation. Position was removed.
          content:
            application/json:
                schema:
                    properties:
                      message:
                        type: string
                example:
                  message: OK
        400:
          description: |-
             It is not successful operation. Here, is Error.
          content:
            application/json:
                schema:
                    properties:
                      matches:
                        type: string
                example:
                  message: Not Ok. Mistake => < descript of error >
        404:
          description: It is not successful operation.
          content:
            application/json:
              schema:
                properties:
                    detail:
                        $ref: '#/components/schemas/ErrorUsedId'
              example:
                detail: No UserRegister matches the given query.
  /users/choice/:
    get:
      tags:
        - user
      summary: Read a user data
      description: |-
        For update data of single cell or more cells.
      operationId: UserView
      parameters:
        - name: user_session
          in: cookie
          required: true
          schema:
            type: string
            example: "gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu"
        - name: is_superuser
          in: cookie
          required: true
          schema:
            type: boolean
            example: false
        - name: index
          in: cookie
          required: true
          schema:
            type: integer
            example: 112
            description: This is the user ID.
      responses:
        200:
          description: Get the json's array of objects from db
          headers:
            Set-Cookie:
                schema:
                    description: Cookie, can containing session information.
                    type: string
                    example: |-
                        "index=123; Path=/; SameSite"
                        "is_active=False; Path=/; SameSite"
                        "is_superuser=False; Path=/; SameSite"
                        "user_session="\034\340\223W\244t'\323xw\325\326\030\2733#E\323t^G)\351]>:m\375\301\202\377O\233\331\342{g2\350\006\026\017\360QV\365o\323\300:\2415\361\267\352\233\211\"\2023S\342*\256"; Path=/; HttpOnly; SameSite"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUserProperties'
              example:
               last_login:
                $ref: '#/components/schemas/AllUserProperties/properties/data/items/properties/last_login/oneOf/0/example'
               is_superuser:
                $ref: '#/components/schemas/AllUserProperties/properties/data/items/properties/is_superuser/example'
               username:
                $ref: '#/components/schemas/AllUserProperties/properties/data/items/properties/username/example'
               first_name:
                $ref: '#/components/schemas/AllUserProperties/properties/data/items/properties/first_name/example'
               last_name:
                $ref: '#/components/schemas/AllUserProperties/properties/data/items/properties/last_name/example'
               is_staff:
                $ref: '#/components/schemas/AllUserProperties/properties/data/items/properties/is_staff/example'
               is_active:
                $ref: '#/components/schemas/AllUserProperties/properties/data/items/properties/is_active/example'
               date_joined:
                $ref: '#/components/schemas/AllUserProperties/properties/data/items/properties/date_joined/example'
        404:
          description: Not found for the provided `pk`
          content:
            application/json:
              schema:
                properties:
                    detail:
                        $ref: '#/components/schemas/ErrorUsedId'
              example:
                detail: No UserRegister matches the given query.
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUsedId'
    post:
      tags:
        - user
      summary: Create a new user data
      description: |-
        For update data of single cell or more cells.
      operationId: UserPatchViews
      requestBody:
        required: true
        content:
            application/json:
                schema:
                    $ref: '#/components/schemas/UserProperties/oneOf/1'
      responses:
        200:
          description: Get the json of object from db
          headers:
            Set-Cookie:
                schema:
                    description: Cookie, can containing session information.
                    type: string
                    example: |-
                        "index=123; Path=/; SameSite"
                        "is_active=False; Path=/; SameSite"
                        "is_superuser=False; Path=/; SameSite"
                        "user_session="\034\340\223W\244t'\323xw\325\326\030\2733#E\323t^G)\351]>:m\375\301\202\377O\233\331\342{g2\350\006\026\017\360QV\365o\323\300:\2415\361\267\352\233\211\"\2023S\342*\256"; Path=/; HttpOnly; SameSite"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProperties/oneOf/0'
                is_active:
                    type: boolean
                    example: false
              example:
                id: 12
                last_login:
                    $ref: '#/components/schemas/UserProperties/oneOf/0/properties/last_login/oneOf/0/example'
                is_superuser:
                    $ref: '#/components/schemas/UserProperties/oneOf/0/properties/is_superuser/example'
                username:
                    $ref: '#/components/schemas/UserProperties/oneOf/0/properties/username/example'
                first_name:
                    $ref: '#/components/schemas/UserProperties/oneOf/0/properties/first_name/example'
                last_name:
                    $ref: '#/components/schemas/UserProperties/oneOf/0/properties/last_name/example'
                is_staff:
                    $ref: '#/components/schemas/UserProperties/oneOf/0/properties/is_staff/example'
                is_active: false
                date_joined:
                    $ref: '#/components/schemas/UserProperties/oneOf/0/properties/date_joined/example'

        404:
          description: Something what wrong!
          content:
            application/json:
              schema:
                properties:
                    detail:
                        type: string
                        $ref: '#/components/schemas/ErrorUsedId'
              example:
                detail: No UserRegister matches the given query.
        400:
          description: Here get the syntax error. Here an example the one of mpre errors
          content:
            application/json:
                 schema:
                    oneOf:
                      - properties:
                            first_name:
                                type: array
                                items:
                                    type: string
                      - properties:
                            detail:
                                type: string
                 example:
                    - detail: "Учетные данные не были предоставлены."

  /files/:
    get:
      tags:
        - file
      summary: For gat a file's list.
      description: |-
        Supeuser can get ф list from everyone of files. (Propoerty 'is_staff'
         must have the 'True' value.)
        USer caт get ф list all files fron his collection.
      operationId: FileStorageViewSet
      parameters:
        - name: user_session
          description: |-
            This. the user receives from registration.
          in: cookie
          required: true
          schema:
            type: string
            example: "gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu"
        - name: is_superuser
          description: |-
            This. the user receives from registration.
          in: cookie
          required: true
          schema:
            type: boolean
            example: false
        - name: index
          in: cookie
          required: false
          schema:
            type: integer
            example: 112
            description: This is the user ID.
      responses:
        200:
            description: If all the very well
            headers:
                Set-Cookie:
                    schema:
                        allOf:
                            - type: string
                              example: user_session=gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu; Path=/; HttpOnly
                              description: Cookie for user session
                            - type: string
                              example: is_superuser=false; Path=/; HttpOnly
                              description: Cookie for user session
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/FileProperties/oneOf/1'
                    example:
                        original_name: "README.docx"
                        size: 27981
                        upload_date: "2025-01-18T17:18:03.154301+07:00"
                        last_downloaded: null
                        comment: null
                        file_path: "/uploads/2025/1/18/README.docx"
                        special_link: "dda8958e-1711-464e-9d47-acd292241149"
        400:
          description: If not all very well
          headers:
            Set-Cookie:
              schema:
                allOf:
                  - type: string
                    example: user_session=gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu; Path=/; HttpOnly
                    description: Cookie for user session
                  - type: string
                    example: is_superuser=false; Path=/; HttpOnly
                    description: Cookie for user session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorFile'
              example:
                error: "Mistake => < text from error >"
    post:
      tags:
        - file
      summary: Store of files
      operationId: FileStorageViewSet
      requestBody:
        required: true
        content:
          multipart/from-data:
            schema:
              $ref: '#/components/shemas/FileOfForm'
      parameters:
        - name: user_session
          description: |-
            This. the user receives from registration.
          in: cookie
          required: true
          schema:
            type: string
            example: "gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu"
        - name: is_superuser
          description: |-
            This. the user receives from registration.
          in: cookie
          required: true
          schema:
            type: boolean
            example: false
        - name: index
          in: cookie
          required: false
          schema:
            type: integer
            example: 112
            description: This is the user ID.
      responses:
        200:
          description: |-
            If is all very well
          headers:
            Set-Cookies:
                schema:
                    allOf:
                        - type: string
                          example: user_session=gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu; Path=/; HttpOnly
                          description: Cookie for user session
                        - type: string
                          example: is_superuser=false; Path=/; HttpOnly
                          description: Cookie for user session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileProperties/oneOf/0'
              example:
                id: 30
                original_name: "README.docx"
                size: 27981
                upload_date: "2025-01-18T17:18:03.154301+07:00"
                last_downloaded: null
                comment: null
                file_path: "/uploads/2025/1/18/README.docx"
                special_link: "dda8958e-1711-464e-9d47-acd292241149"
        400:
          description: |-
            If is not very well
          headers:
            Set-Cookies:
                schema:
                    allOf:
                        - type: string
                          example: user_session=gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu; Path=/; HttpOnly
                          description: Cookie for user session
                        - type: string
                          example: is_superuser=false; Path=/; HttpOnly
                          description: Cookie for user session
          content:
            application/json:
              schema:
                properties:
                    error:
                        $ref: '#/components/schemas/ErrorFile'
              example:
                error: No file provided
        404:
          description: |-
            If is not very well
          headers:
            Set-Cookies:
                schema:
                    allOf:
                        - type: string
                          example: user_session=gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu; Path=/; HttpOnly
                          description: Cookie for user session
                        - type: string
                          example: is_superuser=false; Path=/; HttpOnly
                          description: Cookie for user session
          content:
            application/json:
              schema:
                properties:
                    error:
                        $ref: '#/components/schemas/ErrorFile'
              example:
                error: File not found.
  /files/{pk}:
    get:
      tags:
        - file
      summary: The method recieve a single posiyion by 'pk'
      description: |-
        User can get a single position by an id  of position if hi is the owner (this id from his a collaction).
        Superuser can get a one position of everyone user.
      operationId: FileStorageViewSet
      parameters:
        - name: pk
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UserId'
          example: 12
        - name: user_session
          in: cookie
          required: true
          schema:
            type: string
            example: "gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu"
        - name: is_superuser
          in: cookie
          required: true
          schema:
            type: boolean
            example: false
        - name: index
          in: cookie
          required: false
          schema:
            type: integer
            example: 112
            description: This is the user ID.
      responses:
        200:
          description: |-
            When an all very well
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileProperties/oneOf/0"
              example:
                id: 30
                original_name: "README.docx"
                size: 27981
                upload_date: "2025-01-18T17:18:03.154301+07:00"
                last_downloaded: null
                comment: null
                file_path: "/uploads/2025/1/18/README.docx"
                special_link: "dda8958e-1711-464e-9d47-acd292241149"
        400:
          description: |-
            When an all very well
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorFile"
              example:
                error: "'pk' is invalid"

  /files/{pk}/update_comment/:
    post:
        tags:
          - file
        summary: This for change (rewrite) a comment to a single file
        operationId: FileStorageViewSet
        requestBody:
            required: true
            content:
              application/json:
                schema:
                    type: object
                    properties:
                      comment:
                        type: string
                        example: "my first comment"

        parameters:
            - name: pk
              description: |-
                This is an individual nuber of single file from db.
              in: path
              required: true
              schema:
                type: integer
                example: 32
            - name: user_session
              description: |-
                This. the user receives from registration.
              in: cookie
              required: true
              schema:
                type: string
                example: "gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu"
            - name: is_superuser
              description: |-
                This. the user receives from registration.
              in: cookie
              required: true
              schema:
                type: boolean
                example: false
            - name: index
              in: cookie
              required: false
              schema:
                type: integer
                example: 112
                description: This is the user ID.
        responses:
            200:
                description: |-
                    The comment was changed.
                headers:
                    Set-Cookie:
                        schema:
                            allOf:
                                - type: string
                                  example: user_session=gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu; Path=/; HttpOnly
                                  description: Cookie for user session
                                - type: string
                                  example: is_superuser=false; Path=/; HttpOnly
                                  description: Cookie for user session
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/FileProperties/oneOf/0'
                        example:
                            id: 30
                            original_name: "README.docx"
                            size: 27981
                            upload_date: "2025-01-18T17:18:03.154301+07:00"
                            last_downloaded: null
                            comment: "my first comment"
                            file_path: "/uploads/2025/1/18/README.docx"
                            special_link: "dda8958e-1711-464e-9d47-acd292241149"
            403:
                description: Permission denied
                headers:
                  Set-Cookie:
                    schema:
                        allOf:
                            - type: string
                              example: user_session=gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu; Path=/; HttpOnly
                              description: Cookie for user session
                            - type: string
                              example: is_superuser=false; Path=/; HttpOnly
                              description: Cookie for user session
                content:
                  application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorFile'
                    example:
                      error: "Permission denied."
            404:
                description: File not found.
                headers:
                  Set-Cookie:
                    schema:
                        allOf:
                          - type: string
                            example: user_session=gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu; Path=/; HttpOnly
                            description: Cookie for user session
                          - type: string
                            example: is_superuser=false; Path=/; HttpOnly
                            description: Cookie for user session
                content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorFile'
                      example:
                        error: "File not found."
  /files/{pk}/rename/:
    post:
        tags:
          - file
        summary: This is for rename file (name changes)
        operationId: FileStorageViewSet
        requestBody:
            required: true
            content:
              application/json:
                schema:
                    type: object
                    properties:
                      new_name:
                        type: string
                        example: "My new-name_for_old_file"

        parameters:
            - name: pk
              description: |-
                This is an individual nuber of single file from db.
              in: path
              required: true
              schema:
                type: integer
                example: 32
            - name: user_session
              description: |-
                This. the user receives from registration.
              in: cookie
              required: true
              schema:
                type: string
                example: "gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu"
            - name: is_superuser
              description: |-
                This. the user receives from registration.
              in: cookie
              required: true
              schema:
                type: boolean
                example: false
            - name: index
              in: cookie
              required: false
              schema:
                type: integer
                example: 112
                description: This is the user ID.
        responses:
            200:
                description: |-
                    The name of file was changed.
                headers:
                    Set-Cookie:
                        schema:
                            allOf:
                                - type: string
                                  example: user_session=gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu; Path=/; HttpOnly
                                  description: Cookie for user session
                                - type: string
                                  example: is_superuser=false; Path=/; HttpOnly
                                  description: Cookie for user session
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/FileProperties/oneOf/0'
                        example:
                            id: 30
                            original_name: "My new-name_for_old_file.docx"
                            size: 27981
                            upload_date: "2025-01-18T17:18:03.154301+07:00"
                            last_downloaded: null
                            comment: "my first comment"
                            file_path: "/uploads/2025/1/18/My new-name_for_old_file.docx"
                            special_link: "dda8958e-1711-464e-9d47-acd292241149"
            400:
                description: Permission denied
                headers:
                  Set-Cookie:
                    schema:
                        allOf:
                            - type: string
                              example: user_session=gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu; Path=/; HttpOnly
                              description: Cookie for user session
                            - type: string
                              example: is_superuser=false; Path=/; HttpOnly
                              description: Cookie for user session
                content:
                  application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorFile'
                    example:
                      error: "New name is required."
            403:
                description: Permission denied
                headers:
                  Set-Cookie:
                    schema:
                        allOf:
                            - type: string
                              example: user_session=gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu; Path=/; HttpOnly
                              description: Cookie for user session
                            - type: string
                              example: is_superuser=false; Path=/; HttpOnly
                              description: Cookie for user session
                content:
                  application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorFile'
                    example:
                      error: "Permission denied."
            404:
                description: File not found.
                headers:
                  Set-Cookie:
                    schema:
                        allOf:
                          - type: string
                            example: user_session=gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu; Path=/; HttpOnly
                            description: Cookie for user session
                          - type: string
                            example: is_superuser=false; Path=/; HttpOnly
                            description: Cookie for user session
                content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorFile'
                      example:
                        error: "File not found."







    delete:
      tags:
        - file
      summary: The method for delete a single position by 'pk'
      description: |-
        User can delete a single position by an id  of position if hi is the owner (this id from his a collaction).
        Superuser can get a one position of everyone user.
      operationId: FileStorageViewSet
      parameters:
        - name: pk
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UserId'
          example: 12
        - name: user_session
          in: cookie
          required: true
          schema:
            type: string
            example: "gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu"
        - name: is_superuser
          in: cookie
          required: true
          schema:
            type: boolean
            example: false
        - name: index
          in: cookie
          required: false
          schema:
            type: integer
            example: 112
            description: This is the user ID.
      responses:
        204:
            description: |-
              When an all very well and a single position was removed
        404:
            description: |-
                When an all not very well and a single position not removed
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/ErrorFile"
                    example:
                        error: "'pk' is invalid"
  /files/{pk}/generate_link/:
    post:
        tags:
          - file
        summary: This is for get the special link for file
        operationId: FileStorageViewSet
        parameters:
            - name: pk
              description: |-
                This is an individual nuber of single file from db.
              in: path
              required: true
              schema:
                type: integer
                example: 32
            - name: user_session
              description: |-
                This. the user receives from registration.
              in: cookie
              required: true
              schema:
                type: string
                example: "gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu"
            - name: is_superuser
              description: |-
                This. the user receives from registration.
              in: cookie
              required: true
              schema:
                type: boolean
                example: false
            - name: index
              in: cookie
              required: false
              schema:
                type: integer
                example: 112
                description: This is the user ID.
        responses:
            200:
                description: |-
                    Special link was sent, for file.
                headers:
                    Set-Cookie:
                        schema:
                            allOf:
                                - type: string
                                  example: user_session=gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu; Path=/; HttpOnly
                                  description: Cookie for user session
                                - type: string
                                  example: is_superuser=false; Path=/; HttpOnly
                                  description: Cookie for user session
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                special_link:
                                    type: string
                                    example: "http://127.0.0.1:8000/api/files/a37167c7-3fe9-4eb4-9c17-f38e0db265c2/download"
                        example:
                            "special_link": "http://127.0.0.1:8000/api/files/a37167c7-3fe9-4eb4-9c17-f38e0db265c2/download"
            400:
                description: Permission denied
                headers:
                  Set-Cookie:
                    schema:
                        allOf:
                            - type: string
                              example: user_session=gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu; Path=/; HttpOnly
                              description: Cookie for user session
                            - type: string
                              example: is_superuser=false; Path=/; HttpOnly
                              description: Cookie for user session
                content:
                  application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorFile'
                    example:
                      error: "New name is required."
            403:
                description: Permission denied
                headers:
                  Set-Cookie:
                    schema:
                        allOf:
                            - type: string
                              example: user_session=gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu; Path=/; HttpOnly
                              description: Cookie for user session
                            - type: string
                              example: is_superuser=false; Path=/; HttpOnly
                              description: Cookie for user session
                content:
                  application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorFile'
                    example:
                      error: "Permission denied."
            404:
                description: File not found.
                headers:
                  Set-Cookie:
                    schema:
                        allOf:
                          - type: string
                            example: user_session=gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu; Path=/; HttpOnly
                            description: Cookie for user session
                          - type: string
                            example: is_superuser=false; Path=/; HttpOnly
                            description: Cookie for user session
                content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorFile'
                      example:
                        error: "File not found."
  /files/{pk}/download/:
    get:
        tags:
          - file
        summary: This is for download a file
        operationId: FileStorageViewSet
        parameters:
            - name: pk
              description: |-
                For download a file
              in: path
              required: true
              schema:
                type: string
                example: a37167c7-3fe9-4eb4-9c17-f38e0db265c2
        responses:
            200:
                description: |-
                    Special link was sent, for file.

                content:
                    aplllication/octet-stream:
                        schema:
                            type: object
                            format: binary
                        example: |
                            # Дипломный проект по профессии «Fullstack-разработчик на Python»

                            ## Облачное хранилище My Cloud

                            ### Цель проекта

                            Цель дипломного проекта — создать веб-приложение, которое будет работать как облачное хранилище. 
                            Приложение позволит пользователям отображать, загружать, отправлять, скачивать и переименовывать файлы. 

            404:
                description: File not found.
                headers:
                  Set-Cookie:
                    schema:
                        allOf:
                          - type: string
                            example: user_session=gAWVQAAAAAAAAACMPCQyYiQxMiRNZE5uT2s2bEROSjFRd2JWeXp5dDN1NkpReTg1eDRpLlVHVUJiTGpoZTM2WkxJZGhscXloT5Qu; Path=/; HttpOnly
                            description: Cookie for user session
                          - type: string
                            example: is_superuser=false; Path=/; HttpOnly
                            description: Cookie for user session
                content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorFile'
                      example:
                        error: "File not found."

components:
  schemas:
    UserId:
      type: integer
      properties:
        pk:
          type: integer
          nullable: true
          minimum: 0
          example: 1
    UserPassword:
      type: object
      properties:
        password:
          type: string
          example: daaEW12%Ds

    Status:
      type: object
      properties:
        status:
          oneOf:
              - type: integer
                example: 204
    UserProperties:
      type: object
      required:
        - id
        - user_session
        - last_login
        - password
        - email
        - is_superuser
        - username
        - first_name
        - last_name
        - is_staff
        - is_active
        - date_joined
      oneOf:
        - properties:
            id:
                $ref: '#/components/schemas/UserId'
            last_login:
                oneOf:
                    -   type: string
                        format: date-time
                        nullable: true
                        description: |-
                            Itis an alias of user.
                            Max length is 150 characters.
                        example: 2024-01-01
                    -   type: string
                        format: date-time
                        nullable: true
                        description: |-
                            Itis an alias of user.
                            Max length is 150 characters.
                        example: 2024.01.01
            is_superuser:
                type: boolean
                example: false
                description: |-
                    If it is the 'True', it means that is the superuser.
                    Here, the superuser is only one!
            username:
                type: string
                example: Victorovich
                description: |-
                    This is unique name of user.
                    Max length is 150 characters.
            first_name:
                type: string
                nullable: true
                description: Max length is 150 characters.
                example: null
            last_name:
                type: string
                nullable: true
                description: Max length is 150 characters.
                example: Denis
            is_staff:
                type: boolean
                description: Designates whether the user can log into this admin site. default=False
                example: false
            is_active:
                type: boolean
                description: |-
                    This is the status user. He is online (true) or ofline (false).
                example: true
            date_joined:
                type: string
                description: |-
                    String, datetime. Format is "2024-10-01" or "2024.10.01". 
                    This is date of the user's registration.
                format: date-time
                example: 2024-01-01
        - properties:
            last_login:
                oneOf:
                    -   type: string
                        format: date-time
                        nullable: true
                        description: |-
                            Itis an alias of user.
                            Max length is 150 characters.
                        example: 2024-01-01
                    -   type: string
                        format: date-time
                        nullable: true
                        description: |-
                            Itis an alias of user.
                            Max length is 150 characters.
                        example: 2024.01.01
            password:
                type: string
                format: password
                example: daaEW12%Ds
            email:
                type: string
                format: email
                example: user@email.here
            is_superuser:
                type: boolean
                example: false
                description: If it is the 'True', it means that is the superuser
            username:
                type: string
                example: Victorovich
                description: |-
                    This is unique name of user.
                    Max length is 150 characters.
            first_name:
                type: string
                description: Max length is 150 characters.
                nullable: true
                example: null

    AllUserProperties:
        type: object
        properties:
          data:
            type: array
            items:
                type: object
                properties:
                    id:
                      $ref: '#/components/schemas/UserId'
                    last_login:
                        oneOf:
                            -   type: string
                                format: date-time
                                nullable: true
                                description: |-
                                    Itis an alias of user.
                                    Max length is 150 characters.
                                example: 2024-01-01
                            -   type: string
                                format: date-time
                                nullable: true
                                description: |-
                                    Itis an alias of user.
                                    Max length is 150 characters.
                                example: 2024.01.01
                    is_superuser:
                        type: boolean
                        example: false
                        description: If it is the 'True', it means that is the superuser
                    username:
                        type: string
                        example: Victorovich
                        description: |-
                            This is unique name of user.
                            Max length is 150 characters.
                    first_name:
                        type: string
                        nullable: true
                        description: Max length is 150 characters.
                        example: null
                    last_name:
                        type: string
                        nullable: true
                        description: Max length is 150 characters.
                        example: Denis
                    is_staff:
                        type: boolean
                        description: Designates whether the user can log into this admin site. default=False
                        example: false
                    is_active:
                        type: boolean
                        description: |-
                            This is the status user. He is online (true) or ofline (false).
                        example: false
                    date_joined:
                        example: 2024-01-01
    FileProperties:
      type: object
      required:
        - id
        - original_name
        - size
        - upload_date
        - last_downloaded
        - comment
        - file_path
        - special_link
      oneOf:
        - properties:
            id:
              $ref: '#/components/schemas/UserId'
            original_name:
              type: string
              example: "README.docx"
            size:
              type: integer
              example: 27981
              description: |-
                This is the weight of files.
            upload_date:
              type: string
              format: date-time
              example: "2025-01-18T17:18:03.154301+07:00"
            last_downloaded:
              type: string
              format: date-time
              nullable: true
              example: "2025-01-18T17:18:03.154301+07:00"
            comment:
              type: string
              nullable: true
              example: his is the my first file
            file_path:
              type: string
              example: "/uploads/2025/1/18/README.docx"
            special_link:
              type: string
              description:  It is for a creating the link for the download
              example: dda8958e-1711-464e-9d47-acd292241149
        - properties:
            data:
              type: array
              items:
                type: object
                properties:
                    id:
                        $ref: '#/components/schemas/UserId'
                    original_name:
                        type: string
                        example: "README.docx"
                    size:
                        type: integer
                        example: 27981
                        description: |-
                            This is the weight of files.
                    upload_date:
                        type: string
                        format: date-time
                        example: "2025-01-18T17:18:03.154301+07:00"
                    last_downloaded:
                        type: string
                        format: date-time
                        nullable: true
                        example: "2025-01-18T17:18:03.154301+07:00"
                    comment:
                        type: string
                        nullable: true
                        example: his is the my first file
                    file_path:
                        type: string
                        example: "/uploads/2025/1/18/README.docx"
                    special_link:
                        type: string
                        description:  It is for a creating the link for the download
                        example: dda8958e-1711-464e-9d47-acd292241149
    FileOfForm:
      type: object
      properties:
        file:
          type: string
          format: binary
          description: File for upload. Bstring of the data type.
    ErrorUsedId:
      type: string
      required:
        - detail
      properties:
        detail:
          description: A human readable error message
          type: string
    ErrorFile:
      type: string
      required:
          - error
      properties:
          error:
            type: string
            example:  No file provided

#
# securitySchemes:
#     ApiKey:
#       type: apiKey
#       in: header
#       name: X-Api-Key



# security:
#   - ApiKey: []
